<Window x:Class="PL.Manager.ManagerWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PL.Manager"
        mc:Ignorable="d"
        Title="ManagerWindow" Height="500" Width="800"
        WindowStartupLocation="CenterScreen"
        Loaded="ManagerWindow_Loaded"
        Closed="ManagerWindow_Closed"
        DataContext="{Binding RelativeSource={RelativeSource Mode=Self}}">

    <Window.Resources>
        <!-- Background -->
        <LinearGradientBrush x:Key="WindowBackgroundBrush" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="#E0F7FA" Offset="0"/>
            <GradientStop Color="#F1F8FF" Offset="1"/>
        </LinearGradientBrush>



        <!-- TextBox style -->
        <Style TargetType="TextBox">
            <Setter Property="Height" Value="28"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="BorderBrush" Value="#aaa"/>
            <Setter Property="BorderThickness" Value="1"/>
        </Style>

        <!-- Button style -->
        <Style TargetType="Button">
            <Setter Property="Height" Value="34"/>
            <Setter Property="Width" Value="150"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Background" Value="#0078D7"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Cursor" Value="Hand"/>
        </Style>
    </Window.Resources>

    <Grid Background="{StaticResource WindowBackgroundBrush}">
        <!-- Centered manager card -->
        <Border Width="600" Padding="30" Background="White" CornerRadius="15"
                HorizontalAlignment="Center" VerticalAlignment="Center">
            <Border.Effect>
                <DropShadowEffect Color="#888" BlurRadius="8" ShadowDepth="3"/>
            </Border.Effect>

            <Grid Margin="10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <!-- Clock Section -->
                <GroupBox Header="Clock" Margin="0,0,0,10">
                    <StackPanel>
                        <Label Content="{Binding CurrentTime}" FontSize="20" HorizontalAlignment="Center"/>
                        <UniformGrid Columns="2" Margin="0,10,0,0">
                            <Button Content="Add 1 minute" Click="btnAddOneMinute_Click" IsEnabled="{Binding IsSimulatorRunning, Converter={StaticResource InverseBooleanConverter}}" />
                            <Button Content="Add 1 hour" Click="btnAddOneHour_Click" IsEnabled="{Binding IsSimulatorRunning, Converter={StaticResource InverseBooleanConverter}}" />
                            <Button Content="Add 1 day" Click="btnAddOneDay_Click" IsEnabled="{Binding IsSimulatorRunning, Converter={StaticResource InverseBooleanConverter}}" />
                            <Button Content="Add 1 year" Click="btnAddOneYear_Click" IsEnabled="{Binding IsSimulatorRunning, Converter={StaticResource InverseBooleanConverter}}" />
                        </UniformGrid>
                    </StackPanel>
                </GroupBox>

                <!-- Risk Section -->
                <GroupBox Header="Risk Range" Grid.Row="1" Margin="0,0,0,10">
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Left">
                        <Label Content="Risk:" VerticalAlignment="Center"/>
                        <TextBox Width="50" Text="{Binding RiskRange}"/>
                        <Button Content="Update" Click="btnUpdateRiskRange_Click" IsEnabled="{Binding IsSimulatorRunning, Converter={StaticResource InverseBooleanConverter}}" />
                    </StackPanel>
                </GroupBox>

                <!-- Bottom Buttons -->
                <Grid Grid.Row="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <!-- Left column -->
                    <StackPanel Grid.Column="0" HorizontalAlignment="Center">
                        <Button Content="Handle Volunteers" Click="btnHandleVolunteers_Click"/>
                        <Button Content="Handle Calls" Click="btnHandleCalls_Click"/>
                    </StackPanel>

                    <!-- Right column -->
                    <StackPanel Grid.Column="1" HorizontalAlignment="Center">
                        <Button Content="Init DB" Click="btnInitDB_Click" IsEnabled="{Binding IsSimulatorRunning, Converter={StaticResource InverseBooleanConverter}}" />
                        <Button Content="Reset DB" Click="btnResetDB_Click" IsEnabled="{Binding IsSimulatorRunning, Converter={StaticResource InverseBooleanConverter}}" />
                    </StackPanel>

                    <!-- Simulator Control Grid -->
                    <Grid Width="250" Height="100"  Grid.Column="2" HorizontalAlignment="Center" >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions> 
                        <StackPanel Orientation="Horizontal" Grid.Row="0" Margin="5">
                            <Label Content="Interval (min):"/>
                            <TextBox Width="50" Text="{Binding Interval, UpdateSourceTrigger=PropertyChanged}" 
                              IsEnabled="{Binding IsSimulatorRunning, Converter={StaticResource InverseBooleanConverter}}"/>
                        </StackPanel>
                        <Button Grid.Row="1" Content="{Binding IsSimulatorRunning, Converter={StaticResource SimulatorButtonTextConverter}}" 
                             Click="btnToggleSimulator_Click"/>
                    </Grid>
                </Grid>
            </Grid>
        </Border>
    </Grid>
</Window>
