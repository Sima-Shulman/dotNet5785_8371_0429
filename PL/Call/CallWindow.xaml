<!--<Window x:Class="PL.Call.CallWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PL.Call"
        mc:Ignorable="d"
        Title="CallWindow" Height="450" Width="800"
        DataContext="{Binding RelativeSource={RelativeSource Mode=Self}}"
        Loaded="CallWindow_Loaded"
        Closed="CallWindow_Closed"
>
    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <StackPanel Orientation="Vertical" Grid.Row="0" Margin="0,0,0,10">
            <TextBlock Text="Call Details" FontWeight="Bold" FontSize="16" Margin="0,0,0,10"/>
            <StackPanel Orientation="Horizontal" Margin="0,0,0,5" Visibility="{Binding ButtonText, Converter={StaticResource ConvertUpdateToVisibleKey}}">
                <TextBlock Text="ID:" Width="120"/>
                <TextBox Text="{Binding CurrentCall.Id}" Width="200" IsReadOnly="True"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="0,0,0,5">
                <TextBlock Text="Type:" Width="120"/>
                <ComboBox Grid.Row="6" Grid.Column="3"
                    ItemsSource="{Binding Source={StaticResource CallTypeCollectionKey}}"
                    SelectedValue="{Binding CurrentCall.CallType, Mode=TwoWay}" Width="200"
                    IsEnabled="{Binding IsEditableAllFields}"  />
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="0,0,0,5">
                <TextBlock Text="Description:" Width="120"/>
                <TextBox Text="{Binding CurrentCall.Description}" Width="200" 
                         IsReadOnly="{Binding IsEditableAllFields, Converter={StaticResource InverseBoolConverterKey}}"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="0,0,0,5">
                <TextBlock Text="Address:" Width="120"/>
                <TextBox Text="{Binding CurrentCall.FullAddress}"  Width="200"
                         IsReadOnly="{Binding IsEditableAllFields, Converter={StaticResource InverseBoolConverterKey}}"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="0,0,0,5">
                <TextBlock Text="Opening Time:" Width="120"/>
                <TextBox Text="{Binding CurrentCall.OpeningTime}"  Width="200" IsReadOnly="True"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="0,0,0,5">
                <TextBlock Text="Max Finish Time:" Width="120" />
                <TextBox Text="{Binding CurrentCall.MaxFinishTime}"  Width="200"
                 IsReadOnly="{Binding IsEditableOnlyMaxFinish, Converter={StaticResource InverseBoolConverterKey}}"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="0,0,0,5"                  Visibility="{Binding ButtonText, Converter={StaticResource ConvertUpdateToVisibleKey}}">
                <TextBlock Text="Status:" Width="120"/>
                <TextBox Text="{Binding CurrentCall.CallStatus}"  Width="200" IsReadOnly="True"/>
            </StackPanel>
        </StackPanel>

        <GroupBox Header="Assignments" Grid.Row="1" Margin="0,0,0,10"  Visibility="{Binding ButtonText, Converter={StaticResource ConvertUpdateToVisibleKey}}">
            <DataGrid ItemsSource="{Binding CurrentCall.AssignmentsList}" AutoGenerateColumns="False" IsEnabled="False">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Volunteer ID" Binding="{Binding VolunteerId}" Width="*"/>
                    <DataGridTextColumn Header="Volunteer" Binding="{Binding VolunteerFullName}" Width="*"/>
                    <DataGridTextColumn Header="Assigned Time" Binding="{Binding StartTime}" Width="*"/>
                    <DataGridTextColumn Header="End Time" Binding="{Binding EndTime}" Width="*"/>
                    <DataGridTextColumn Header="End Type" Binding="{Binding EndType}" Width="*"/>
                </DataGrid.Columns>
            </DataGrid>
        </GroupBox>
        <Button Content="{Binding ButtonText}" Grid.Row="2"
        Width="100" Height="30" HorizontalAlignment="Right"
        Margin="0,10,0,0"
        Click="btnUpdate_Click"
        IsEnabled="{Binding IsEditable}" />

    </Grid>

</Window>-->
    
    
<!--<Window x:Class="PL.Call.CallWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PL.Call"
        mc:Ignorable="d"
        Title="CallWindow" Height="600" Width="650" ResizeMode="CanMinimize"
        DataContext="{Binding RelativeSource={RelativeSource Mode=Self}}"
>
    <Window.Resources>
        --><!-- Background gradient --><!--
        <LinearGradientBrush x:Key="WindowBackgroundBrush" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="#f1f5f9" Offset="0"/>
            <GradientStop Color="#e2e8f0" Offset="0.5"/>
            <GradientStop Color="#cbd5e1" Offset="1"/>
        </LinearGradientBrush>

        --><!-- Card background --><!--
        <SolidColorBrush x:Key="CardBackgroundBrush" Color="#E0FFFFFF" Opacity="0.75"/>

        --><!-- Header style --><!--
        <Style x:Key="HeaderStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Foreground" Value="#1e293b"/>
            <Setter Property="Margin" Value="0,0,0,12"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
        </Style>

        --><!-- Label style --><!--
        <Style x:Key="LabelStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Foreground" Value="#374151"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="Width" Value="110"/>
            <Setter Property="TextAlignment" Value="Right"/>
            <Setter Property="Margin" Value="0,0,8,0"/>
        </Style>

        --><!-- TextBox style --><!--
        <Style TargetType="TextBox">
            <Setter Property="Height" Value="28"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Padding" Value="2,2"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="#1f2937"/>
            <Setter Property="BorderBrush" Value="#d1d5db"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Width" Value="140"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4">
                            <ScrollViewer x:Name="PART_ContentHost"
                                        Margin="{TemplateBinding Padding}"
                                        VerticalAlignment="Center"
                                        HorizontalScrollBarVisibility="Hidden"
                                        VerticalScrollBarVisibility="Hidden"
                                        HorizontalAlignment="Left"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" Value="#374151"/>
                                <Setter Property="BorderThickness" Value="1.5"/>
                            </Trigger>
                            <Trigger Property="IsReadOnly" Value="True">
                                <Setter Property="Background" Value="#f8fafc"/>
                                <Setter Property="Foreground" Value="#374151"/>
                                <Setter Property="BorderBrush" Value="#e2e8f0"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        --><!-- ComboBox style --><!--
        <Style TargetType="ComboBox">
            <Setter Property="Height" Value="32"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Padding" Value="8,6"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="#1f2937"/>
            <Setter Property="BorderBrush" Value="#d1d5db"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Width" Value="140"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="6">
                            <Grid>
                                <ToggleButton Name="ToggleButton" 
                                            Background="Transparent"
                                            BorderThickness="0"
                                            Focusable="false"
                                            IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                            ClickMode="Press">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition Width="20"/>
                                        </Grid.ColumnDefinitions>
                                        <Path Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center"
                                              Data="M 0 0 L 4 4 L 8 0 Z" Fill="#6b7280"/>
                                    </Grid>
                                </ToggleButton>
                                <ContentPresenter Name="ContentSite" IsHitTestVisible="False"
                                                Content="{TemplateBinding SelectionBoxItem}"
                                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                Margin="8,3,23,3"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Left"/>
                                <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}"
                                       AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                                    <Grid Name="DropDown" SnapsToDevicePixels="True"
                                          MinWidth="{TemplateBinding ActualWidth}"
                                          MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                        <Border Background="White" BorderThickness="1" BorderBrush="#d1d5db" CornerRadius="6"/>
                                        <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True" HorizontalAlignment="Left">
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                        </ScrollViewer>
                                    </Grid>
                                </Popup>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" Value="#374151"/>
                                <Setter Property="BorderThickness" Value="2"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        --><!-- Button style --><!--
        <Style TargetType="Button">
            <Setter Property="Height" Value="35"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Background" Value="#374151"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Width" Value="100"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="6"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" 
                                            VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#1f2937"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#111827"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#9ca3af"/>
                                <Setter Property="Foreground" Value="#6b7280"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        --><!-- GroupBox style --><!--
        <Style TargetType="GroupBox">
            <Setter Property="Background" Value="{StaticResource CardBackgroundBrush}"/>
            <Setter Property="BorderBrush" Value="#d1d5db"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="15"/>
            <Setter Property="Margin" Value="0,0,0,10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GroupBox">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="8">
                            <Border.Effect>
                                <DropShadowEffect Color="#e2e8f0" BlurRadius="6" ShadowDepth="2" Opacity="0.4"/>
                            </Border.Effect>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <ContentPresenter Grid.Row="0" 
                                                ContentSource="Header" 
                                                Margin="8,0,0,8"
                                                TextBlock.FontSize="14"
                                                TextBlock.FontWeight="SemiBold"
                                                TextBlock.Foreground="#374151"/>
                                <ContentPresenter Grid.Row="1" 
                                                Margin="{TemplateBinding Padding}"/>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        --><!-- DataGrid style --><!--
        <Style TargetType="DataGrid">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="#d1d5db"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="GridLinesVisibility" Value="Horizontal"/>
            <Setter Property="HorizontalGridLinesBrush" Value="#f3f4f6"/>
            <Setter Property="RowBackground" Value="White"/>
            <Setter Property="AlternatingRowBackground" Value="#f9fafb"/>
            <Setter Property="CanUserResizeRows" Value="False"/>
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGrid">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="6"
                                SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="ScrollViewer">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1"/>
                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.Column="1" Grid.Row="1"/>
                                            <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Grid.Row="1" Orientation="Vertical"/>
                                            <Grid Grid.Column="1" Grid.Row="2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Orientation="Horizontal"/>
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        --><!-- DataGrid header style --><!--
        <Style TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="#f8fafc"/>
            <Setter Property="Foreground" Value="#374151"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Padding" Value="8,6"/>
            <Setter Property="BorderBrush" Value="#e5e7eb"/>
            <Setter Property="BorderThickness" Value="0,0,1,1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>

        --><!-- DataGrid cell style --><!--
        <Style TargetType="DataGridCell">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="6,4"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGridCell">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#dbeafe"/>
                    <Setter Property="Foreground" Value="#1e40af"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    --><!-- Main background --><!--
    <Grid Background="{StaticResource WindowBackgroundBrush}">
        --><!-- Background pattern --><!--
        <Canvas>
            <Rectangle Width="150" Height="150" Canvas.Left="500" Canvas.Top="80" Opacity="0.02">
                <Rectangle.Fill>
                    <RadialGradientBrush>
                        <GradientStop Color="#64748b" Offset="0"/>
                        <GradientStop Color="Transparent" Offset="1"/>
                    </RadialGradientBrush>
                </Rectangle.Fill>
            </Rectangle>
            <Rectangle Width="120" Height="120" Canvas.Left="30" Canvas.Top="400" Opacity="0.015">
                <Rectangle.Fill>
                    <RadialGradientBrush>
                        <GradientStop Color="#374151" Offset="0"/>
                        <GradientStop Color="Transparent" Offset="1"/>
                    </RadialGradientBrush>
                </Rectangle.Fill>
            </Rectangle>
        </Canvas>

        --><!-- Main content --><!--
        <Grid Margin="15">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            --><!-- Call Details Section --><!--
            <Border Grid.Row="0" Background="{StaticResource CardBackgroundBrush}" 
                    CornerRadius="8" Padding="15" Margin="0,0,0,10">
                <Border.Effect>
                    <DropShadowEffect Color="#e2e8f0" BlurRadius="4" ShadowDepth="1" Opacity="0.4"/>
                </Border.Effect>
                <StackPanel Orientation="Vertical">
                    <TextBlock Text="Call Details" Style="{StaticResource HeaderStyle}"/>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="15"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        --><!-- Column 1 --><!--
                        <StackPanel Grid.Column="0" Grid.Row="0" Orientation="Horizontal" Margin="0,0,0,6" 
                                    Visibility="{Binding ButtonText, Converter={StaticResource ConvertUpdateToVisibleKey}}">
                            <TextBlock Text="ID:" Style="{StaticResource LabelStyle}"/>
                        </StackPanel>
                        <TextBox Grid.Column="1" Grid.Row="0" Text="{Binding CurrentCall.Id}" IsReadOnly="True" Margin="0,0,0,6"
                                 Visibility="{Binding ButtonText, Converter={StaticResource ConvertUpdateToVisibleKey}}"/>

                        <StackPanel Grid.Column="0" Grid.Row="1" Orientation="Horizontal" Margin="0,0,0,6">
                            <TextBlock Text="Type:" Style="{StaticResource LabelStyle}"/>
                        </StackPanel>
                        <ComboBox Grid.Column="1" Grid.Row="1" ItemsSource="{Binding Source={StaticResource CallTypeCollectionKey}}"
                                SelectedValue="{Binding CurrentCall.CallType, Mode=TwoWay}"
                                IsEnabled="{Binding IsEditableAllFields}" Margin="0,0,0,6"/>

                        <StackPanel Grid.Column="0" Grid.Row="2" Orientation="Horizontal" Margin="0,0,0,6">
                            <TextBlock Text="Description:" Style="{StaticResource LabelStyle}"/>
                        </StackPanel>
                        <TextBox Grid.Column="1" Grid.Row="2" Text="{Binding CurrentCall.Description}" Margin="0,0,0,6"
                                 IsReadOnly="{Binding IsEditableAllFields, Converter={StaticResource InverseBoolConverterKey}}"/>

                        <StackPanel Grid.Column="0" Grid.Row="3" Orientation="Horizontal" Margin="0,0,0,6">
                            <TextBlock Text="Address:" Style="{StaticResource LabelStyle}"/>
                        </StackPanel>
                        <TextBox Grid.Column="1" Grid.Row="3" Text="{Binding CurrentCall.FullAddress}" Margin="0,0,0,6"
                                 IsReadOnly="{Binding IsEditableAllFields, Converter={StaticResource InverseBoolConverterKey}}"/>

                        --><!-- Column 2 --><!--
                        <StackPanel Grid.Column="3" Grid.Row="0" Orientation="Horizontal" Margin="0,0,0,6">
                            <TextBlock Text="Opening Time:" Style="{StaticResource LabelStyle}"/>
                        </StackPanel>
                        <TextBox Grid.Column="4" Grid.Row="0" Text="{Binding CurrentCall.OpeningTime}" IsReadOnly="True" Margin="0,0,0,6"/>

                        <StackPanel Grid.Column="3" Grid.Row="1" Orientation="Horizontal" Margin="0,0,0,6">
                            <TextBlock Text="Max Finish Time:" Style="{StaticResource LabelStyle}"/>
                        </StackPanel>
                        <TextBox Grid.Column="4" Grid.Row="1" Text="{Binding CurrentCall.MaxFinishTime}" Margin="0,0,0,6"
                                 IsReadOnly="{Binding IsEditableOnlyMaxFinish, Converter={StaticResource InverseBoolConverterKey}}"/>

                        <StackPanel Grid.Column="3" Grid.Row="2" Orientation="Horizontal" Margin="0,0,0,6" 
                                    Visibility="{Binding ButtonText, Converter={StaticResource ConvertUpdateToVisibleKey}}">
                            <TextBlock Text="Status:" Style="{StaticResource LabelStyle}"/>
                        </StackPanel>
                        <TextBox Grid.Column="4" Grid.Row="2" Text="{Binding CurrentCall.CallStatus}" IsReadOnly="True" Margin="0,0,0,6"
                                 Visibility="{Binding ButtonText, Converter={StaticResource ConvertUpdateToVisibleKey}}"/>
                    </Grid>
                </StackPanel>
            </Border>

            --><!-- Assignments Section --><!--
            <GroupBox Header="Assignments" Grid.Row="1" Visibility="{Binding ButtonText, Converter={StaticResource ConvertUpdateToVisibleKey}}">
                <DataGrid ItemsSource="{Binding CurrentCall.AssignmentsList}" AutoGenerateColumns="False" IsEnabled="False"
                          MaxHeight="200" ScrollViewer.VerticalScrollBarVisibility="Auto">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Volunteer ID" Binding="{Binding VolunteerId}" Width="0.8*"/>
                        <DataGridTextColumn Header="Volunteer" Binding="{Binding VolunteerFullName}" Width="1.5*"/>
                        <DataGridTextColumn Header="Assigned Time" Binding="{Binding StartTime}" Width="1.2*"/>
                        <DataGridTextColumn Header="End Time" Binding="{Binding EndTime}" Width="1.2*"/>
                        <DataGridTextColumn Header="End Type" Binding="{Binding EndType}" Width="0.8*"/>
                    </DataGrid.Columns>
                </DataGrid>
            </GroupBox>

            --><!-- Action Button --><!--
            <Button Content="{Binding ButtonText}" Grid.Row="2"
                    HorizontalAlignment="Right"
                    Margin="0,8,0,0"
                    Click="btnUpdate_Click"
                    IsEnabled="{Binding IsEditable}"/>
        </Grid>
    </Grid>
</Window>-->

    
<Window x:Class="PL.Call.CallWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PL.Call"
        mc:Ignorable="d"
        Title="CallWindow" Height="600" Width="650" ResizeMode="CanMinimize"
        DataContext="{Binding RelativeSource={RelativeSource Mode=Self}}"
>
    <Window.Resources>
        <!-- Background gradient -->
        <LinearGradientBrush x:Key="WindowBackgroundBrush" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="#f1f5f9" Offset="0"/>
            <GradientStop Color="#e2e8f0" Offset="0.5"/>
            <GradientStop Color="#cbd5e1" Offset="1"/>
        </LinearGradientBrush>

        <!-- Card background -->
        <SolidColorBrush x:Key="CardBackgroundBrush" Color="#E0FFFFFF" Opacity="0.75"/>

        <!-- Header style -->
        <Style x:Key="HeaderStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Foreground" Value="#1e293b"/>
            <Setter Property="Margin" Value="0,0,0,12"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
        </Style>

        <!-- Label style -->
        <Style x:Key="LabelStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Foreground" Value="#374151"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="Width" Value="110"/>
            <Setter Property="TextAlignment" Value="Left"/>
            <Setter Property="Margin" Value="0,0,8,0"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
        </Style>

        <!-- TextBox style -->
        <Style TargetType="TextBox">
            <Setter Property="Height" Value="28"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Padding" Value="2,2"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="#1f2937"/>
            <Setter Property="BorderBrush" Value="#d1d5db"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Width" Value="140"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4">
                            <ScrollViewer x:Name="PART_ContentHost"
                                        Margin="{TemplateBinding Padding}"
                                        VerticalAlignment="Center"
                                        HorizontalScrollBarVisibility="Hidden"
                                        VerticalScrollBarVisibility="Hidden"
                                        HorizontalAlignment="Left"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" Value="#374151"/>
                                <Setter Property="BorderThickness" Value="1.5"/>
                            </Trigger>
                            <Trigger Property="IsReadOnly" Value="True">
                                <Setter Property="Background" Value="#f8fafc"/>
                                <Setter Property="Foreground" Value="#374151"/>
                                <Setter Property="BorderBrush" Value="#e2e8f0"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ComboBox style -->
        <Style TargetType="ComboBox">
            <Setter Property="Height" Value="32"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Padding" Value="8,6"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="#1f2937"/>
            <Setter Property="BorderBrush" Value="#d1d5db"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Width" Value="140"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="6">
                            <Grid>
                                <ToggleButton Name="ToggleButton" 
                                            Background="Transparent"
                                            BorderThickness="0"
                                            Focusable="false"
                                            IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                            ClickMode="Press">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition Width="20"/>
                                        </Grid.ColumnDefinitions>
                                        <Path Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center"
                                              Data="M 0 0 L 4 4 L 8 0 Z" Fill="#6b7280"/>
                                    </Grid>
                                </ToggleButton>
                                <ContentPresenter Name="ContentSite" IsHitTestVisible="False"
                                                Content="{TemplateBinding SelectionBoxItem}"
                                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                Margin="8,3,23,3"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Left"/>
                                <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}"
                                       AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                                    <Grid Name="DropDown" SnapsToDevicePixels="True"
                                          MinWidth="{TemplateBinding ActualWidth}"
                                          MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                        <Border Background="White" BorderThickness="1" BorderBrush="#d1d5db" CornerRadius="6"/>
                                        <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True" HorizontalAlignment="Left">
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                        </ScrollViewer>
                                    </Grid>
                                </Popup>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" Value="#374151"/>
                                <Setter Property="BorderThickness" Value="2"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Button style -->
        <Style TargetType="Button">
            <Setter Property="Height" Value="35"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Background" Value="#374151"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Width" Value="100"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="6"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" 
                                            VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#1f2937"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#111827"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#9ca3af"/>
                                <Setter Property="Foreground" Value="#6b7280"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- GroupBox style -->
        <Style TargetType="GroupBox">
            <Setter Property="Background" Value="{StaticResource CardBackgroundBrush}"/>
            <Setter Property="BorderBrush" Value="#d1d5db"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="15"/>
            <Setter Property="Margin" Value="0,0,0,10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GroupBox">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="8">
                            <Border.Effect>
                                <DropShadowEffect Color="#e2e8f0" BlurRadius="6" ShadowDepth="2" Opacity="0.4"/>
                            </Border.Effect>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <ContentPresenter Grid.Row="0" 
                                                ContentSource="Header" 
                                                Margin="8,0,0,8"
                                                TextBlock.FontSize="14"
                                                TextBlock.FontWeight="SemiBold"
                                                TextBlock.Foreground="#374151"/>
                                <ContentPresenter Grid.Row="1" 
                                                Margin="{TemplateBinding Padding}"/>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- DataGrid style -->
        <Style TargetType="DataGrid">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="#d1d5db"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="GridLinesVisibility" Value="Horizontal"/>
            <Setter Property="HorizontalGridLinesBrush" Value="#f3f4f6"/>
            <Setter Property="RowBackground" Value="White"/>
            <Setter Property="AlternatingRowBackground" Value="#f9fafb"/>
            <Setter Property="CanUserResizeRows" Value="False"/>
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGrid">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="6"
                                SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="ScrollViewer">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1"/>
                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.Column="1" Grid.Row="1"/>
                                            <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Grid.Row="1" Orientation="Vertical"/>
                                            <Grid Grid.Column="1" Grid.Row="2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Orientation="Horizontal"/>
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- DataGrid header style -->
        <Style TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="#f8fafc"/>
            <Setter Property="Foreground" Value="#374151"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Padding" Value="8,6"/>
            <Setter Property="BorderBrush" Value="#e5e7eb"/>
            <Setter Property="BorderThickness" Value="0,0,1,1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>

        <!-- DataGrid cell style -->
        <Style TargetType="DataGridCell">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="6,4"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGridCell">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#dbeafe"/>
                    <Setter Property="Foreground" Value="#1e40af"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <!-- Main background -->
    <Grid Background="{StaticResource WindowBackgroundBrush}">
        <!-- Background pattern -->
        <Canvas>
            <Rectangle Width="150" Height="150" Canvas.Left="500" Canvas.Top="80" Opacity="0.02">
                <Rectangle.Fill>
                    <RadialGradientBrush>
                        <GradientStop Color="#64748b" Offset="0"/>
                        <GradientStop Color="Transparent" Offset="1"/>
                    </RadialGradientBrush>
                </Rectangle.Fill>
            </Rectangle>
            <Rectangle Width="120" Height="120" Canvas.Left="30" Canvas.Top="400" Opacity="0.015">
                <Rectangle.Fill>
                    <RadialGradientBrush>
                        <GradientStop Color="#374151" Offset="0"/>
                        <GradientStop Color="Transparent" Offset="1"/>
                    </RadialGradientBrush>
                </Rectangle.Fill>
            </Rectangle>
        </Canvas>

        <!-- Main content -->
        <Grid Margin="15">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!-- Call Details Section -->
            <Border Grid.Row="0" Background="{StaticResource CardBackgroundBrush}" 
                    CornerRadius="8" Padding="15" Margin="0,0,0,10">
                <Border.Effect>
                    <DropShadowEffect Color="#e2e8f0" BlurRadius="4" ShadowDepth="1" Opacity="0.4"/>
                </Border.Effect>
                <StackPanel Orientation="Vertical">
                    <TextBlock Text="Call Details" Style="{StaticResource HeaderStyle}"/>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="15"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <!-- Column 1 -->
                        <StackPanel Grid.Column="0" Grid.Row="0" Orientation="Horizontal" Margin="0,0,0,6" 
                                    Visibility="{Binding ButtonText, Converter={StaticResource ConvertUpdateToVisibleKey}}">
                            <TextBlock Text="ID:" Style="{StaticResource LabelStyle}"/>
                        </StackPanel>
                        <TextBox Grid.Column="1" Grid.Row="0" Text="{Binding CurrentCall.Id}" IsReadOnly="True" Margin="0,0,0,6"
                                 Visibility="{Binding ButtonText, Converter={StaticResource ConvertUpdateToVisibleKey}}"/>

                        <StackPanel Grid.Column="0" Grid.Row="1" Orientation="Horizontal" Margin="0,0,0,6">
                            <TextBlock Text="Type:" Style="{StaticResource LabelStyle}"/>
                        </StackPanel>
                        <ComboBox Grid.Column="1" Grid.Row="1" ItemsSource="{Binding Source={StaticResource CallTypeCollectionKey}}"
                                SelectedValue="{Binding CurrentCall.CallType, Mode=TwoWay}"
                                IsEnabled="{Binding IsEditableAllFields}" Margin="0,0,0,6"/>

                        <StackPanel Grid.Column="0" Grid.Row="2" Orientation="Horizontal" Margin="0,0,0,6">
                            <TextBlock Text="Description:" Style="{StaticResource LabelStyle}"/>
                        </StackPanel>
                        <TextBox Grid.Column="1" Grid.Row="2" Text="{Binding CurrentCall.Description}" Margin="0,0,0,6"
                                 IsReadOnly="{Binding IsEditableAllFields, Converter={StaticResource InverseBoolConverterKey}}"/>

                        <StackPanel Grid.Column="0" Grid.Row="3" Orientation="Horizontal" Margin="0,0,0,6">
                            <TextBlock Text="Address:" Style="{StaticResource LabelStyle}"/>
                        </StackPanel>
                        <TextBox Grid.Column="1" Grid.Row="3" Text="{Binding CurrentCall.FullAddress}" Margin="0,0,0,6"
                                 IsReadOnly="{Binding IsEditableAllFields, Converter={StaticResource InverseBoolConverterKey}}"/>

                        <!-- Column 2 -->
                        <StackPanel Grid.Column="3" Grid.Row="0" Orientation="Horizontal" Margin="0,0,0,6">
                            <TextBlock Text="Opening Time:" Style="{StaticResource LabelStyle}"/>
                        </StackPanel>
                        <TextBox Grid.Column="4" Grid.Row="0" Text="{Binding CurrentCall.OpeningTime}" IsReadOnly="True" Margin="0,0,0,6"/>

                        <StackPanel Grid.Column="3" Grid.Row="1" Orientation="Horizontal" Margin="0,0,0,6">
                            <TextBlock Text="Max Finish Time:" Style="{StaticResource LabelStyle}"/>
                        </StackPanel>
                        <TextBox Grid.Column="4" Grid.Row="1" Text="{Binding CurrentCall.MaxFinishTime}" Margin="0,0,0,6"
                                 IsReadOnly="{Binding IsEditableOnlyMaxFinish, Converter={StaticResource InverseBoolConverterKey}}"/>

                        <StackPanel Grid.Column="3" Grid.Row="2" Orientation="Horizontal" Margin="0,0,0,6" 
                                    Visibility="{Binding ButtonText, Converter={StaticResource ConvertUpdateToVisibleKey}}">
                            <TextBlock Text="Status:" Style="{StaticResource LabelStyle}"/>
                        </StackPanel>
                        <TextBox Grid.Column="4" Grid.Row="2" Text="{Binding CurrentCall.CallStatus}" IsReadOnly="True" Margin="0,0,0,6"
                                 Visibility="{Binding ButtonText, Converter={StaticResource ConvertUpdateToVisibleKey}}"/>
                    </Grid>
                </StackPanel>
            </Border>

            <!-- Assignments Section -->
            <GroupBox Header="Assignments" Grid.Row="1" Visibility="{Binding ButtonText, Converter={StaticResource ConvertUpdateToVisibleKey}}">
                <DataGrid ItemsSource="{Binding CurrentCall.AssignmentsList}" AutoGenerateColumns="False" IsEnabled="False"
                          MaxHeight="200" ScrollViewer.VerticalScrollBarVisibility="Auto">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Volunteer ID" Binding="{Binding VolunteerId}" Width="0.8*"/>
                        <DataGridTextColumn Header="Volunteer" Binding="{Binding VolunteerFullName}" Width="1.5*"/>
                        <DataGridTextColumn Header="Assigned Time" Binding="{Binding StartTime}" Width="1.2*"/>
                        <DataGridTextColumn Header="End Time" Binding="{Binding EndTime}" Width="1.2*"/>
                        <DataGridTextColumn Header="End Type" Binding="{Binding EndType}" Width="0.8*"/>
                    </DataGrid.Columns>
                </DataGrid>
            </GroupBox>

            <!-- Action Button -->
            <Button Content="{Binding ButtonText}" Grid.Row="2"
                    HorizontalAlignment="Right"
                    Margin="0,8,0,0"
                    Click="btnUpdate_Click"
                    IsEnabled="{Binding IsEditable}"/>
        </Grid>
    </Grid>
</Window>
