<!--<Window x:Class="PL.Call.CallListWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PL.Call"
        mc:Ignorable="d"
        Title="CallListWindow"
        WindowState="Maximized"
        DataContext="{Binding RelativeSource={RelativeSource Mode=Self}}"
        Loaded="callListWindow_Loaded"
        Closed="callLisWindow_Closed">

    <Window.Resources>
        --><!-- סגנון כפתור כללי מודרני --><!--
        <Style TargetType="Button" x:Key="ModernButtonStyle">
            <Setter Property="Background" Value="#2E86C1"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Padding" Value="8,4"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="MinWidth" Value="80"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                CornerRadius="6" 
                                SnapsToDevicePixels="True"
                                BorderBrush="#1B4F72"
                                BorderThickness="1">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#1B4F72"/>
                                <Setter Property="BorderBrush" Value="#145A86"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#154360"/>
                                <Setter Property="BorderBrush" Value="#0F2C43"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#AAB7B8"/>
                                <Setter Property="Foreground" Value="#555"/>
                                <Setter Property="Cursor" Value="Arrow"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        --><!-- סגנון לכפתור מחיקה --><!--
        <Style TargetType="Button" x:Key="DeleteButtonStyle" BasedOn="{StaticResource ModernButtonStyle}">
            <Setter Property="Background" Value="#E74C3C"/>
            <Setter Property="BorderBrush" Value="#C0392B"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Padding" Value="6,3"/>
            <Setter Property="MinWidth" Value="70"/>
            <Setter Property="ToolTip" Value="Delete this item" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                CornerRadius="8" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="1"
                                SnapsToDevicePixels="True"
                                >
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" >
                                <TextBlock Text="🗑" FontSize="14" Margin="0,0,4,0" />
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#C0392B"/>
                                <Setter Property="BorderBrush" Value="#922B21"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#922B21"/>
                                <Setter Property="BorderBrush" Value="#6B2118"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#E6B0AA"/>
                                <Setter Property="Foreground" Value="#7F4F4B"/>
                                <Setter Property="Cursor" Value="Arrow"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        --><!-- סגנון לכפתור ביטול השמה --><!--
        <Style TargetType="Button" x:Key="UnassignButtonStyle" BasedOn="{StaticResource ModernButtonStyle}">
            <Setter Property="Background" Value="#F39C12"/>
            <Setter Property="BorderBrush" Value="#D68910"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Padding" Value="6,3"/>
            <Setter Property="MinWidth" Value="80"/>
            <Setter Property="ToolTip" Value="Unassign this call" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                CornerRadius="8" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="1"
                                SnapsToDevicePixels="True"
                                >
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" >
                                <TextBlock Text="↩" FontSize="14" Margin="0,0,4,0" />
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#D68910"/>
                                <Setter Property="BorderBrush" Value="#B9770E"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#B9770E"/>
                                <Setter Property="BorderBrush" Value="#946F0B"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#FAD7A0"/>
                                <Setter Property="Foreground" Value="#927E5E"/>
                                <Setter Property="Cursor" Value="Arrow"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        --><!-- סגנון לתאים בטבלה למרכז טקסט --><!--
        <Style TargetType="DataGridCell" x:Key="CenteredCellStyle">
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="6,2"/>
        </Style>

        --><!-- סגנון לכותרות העמודות למרכז טקסט --><!--
        <Style TargetType="DataGridColumnHeader" x:Key="CenteredHeaderStyle">
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="6,4" />
        </Style>
        --><!-- הוסף ל־Window.Resources --><!--
        <Style TargetType="Button" x:Key="AddButtonStyle" BasedOn="{StaticResource ModernButtonStyle}">
            <Setter Property="Background" Value="#27AE60"/>
            --><!-- ירוק מודרני --><!--
            <Setter Property="BorderBrush" Value="#1E8449"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="MinWidth" Value="120"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="ToolTip" Value="Add a new call" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                        CornerRadius="8" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="1"
                        SnapsToDevicePixels="True"
                        >
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" >
                                <TextBlock Text="+" FontSize="18" Margin="0,0,6,0" FontWeight="Bold"/>
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#1E8449"/>
                                <Setter Property="BorderBrush" Value="#196F3D"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#196F3D"/>
                                <Setter Property="BorderBrush" Value="#145A32"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#ABEBC6"/>
                                <Setter Property="Foreground" Value="#567D46"/>
                                <Setter Property="Cursor" Value="Arrow"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>

    <Grid>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="40*"/>
                <RowDefinition Height="500*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
        </Grid>

        <Grid HorizontalAlignment="Stretch" Height="50" Grid.Row="0" VerticalAlignment="Top" Width="auto"  >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="2*"/>
            </Grid.ColumnDefinitions>
            <Label Content="Call Type:" HorizontalContentAlignment="Center" Grid.Column="0" Height="50" VerticalAlignment="Top"/>
            <ComboBox 
                SelectedValue="{Binding CallType, Mode=TwoWay}"
                SelectionChanged="comboBoxFilterCallType_SelectionChanged" 
                ItemsSource="{Binding Source={StaticResource CallTypeCollectionKey}}" Grid.Column="1" Height="50" HorizontalContentAlignment="Center" VerticalContentAlignment="Top"  />
            <Label Content="status" HorizontalContentAlignment="Center" VerticalContentAlignment="Top" Grid.Column="2"  Height="50"/>
            <ComboBox
                Grid.Column="3" 
                SelectedValue="{Binding CallStatus, Mode=TwoWay}"
                SelectionChanged="comboBoxFilterCallStatus_SelectionChanged" 
                ItemsSource="{Binding Source={StaticResource CallStatusCollectionKey}}" 
                Height="50"
                HorizontalContentAlignment="Center" 
                VerticalContentAlignment="Top"/>
        </Grid>

        <DataGrid
            ItemsSource="{Binding CallList}"
            IsReadOnly="True"
            AutoGenerateColumns="False"
            EnableRowVirtualization="True"
            RowDetailsVisibilityMode="VisibleWhenSelected"
            MouseDoubleClick="DataGrid_MouseDoubleClick"
            SelectedItem="{Binding SelectedCall}" 
            Margin="0,60,0,75"
            GridLinesVisibility="None"
            CellStyle="{StaticResource CenteredCellStyle}"
            ColumnHeaderStyle="{StaticResource CenteredHeaderStyle}">

            <DataGrid.Columns>
                --><!-- שימוש ב- * כדי לשמור יחס קבוע בין העמודות --><!--
                <DataGridTextColumn Binding="{Binding CallId}" Header="CallId" Width="1*"/>
                <DataGridTextColumn Binding="{Binding CallType}" Header="CallType" Width="2*"/>
                <DataGridTextColumn Binding="{Binding OpeningTime}" Header="OpeningTime" Width="2*"/>
                <DataGridTextColumn Binding="{Binding TimeLeft}" Header="TimeLeft" Width="1*"/>
                <DataGridTextColumn Binding="{Binding LastVolunteerName}" Header="LastVolunteerName" Width="3*"/>
                <DataGridTextColumn Binding="{Binding TotalTime}" Header="TotalTime" Width="1*"/>
                <DataGridTextColumn Binding="{Binding CallStatus}" Header="CallStatus" Width="2*"/>
                <DataGridTextColumn Binding="{Binding TotalAssignments}" Header="TotalAssignments" Width="1*"/>

                <DataGridTemplateColumn Header="Unassign" Width="1.5*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Content="Unassign"
                                    Click="btnUnassignCall_Click"
                                    Style="{StaticResource UnassignButtonStyle}"
                                    Visibility="{Binding CallStatus, Converter={StaticResource CallStatusToVisibilityConverter}}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Delete" Width="1.5*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Content="Delete"
                                    Click="btnDeleteCall_Click"
                                    Style="{StaticResource DeleteButtonStyle}">
                                <Button.Visibility>
                                    <MultiBinding Converter="{StaticResource CallStatusAndNeverAssignedToVisibilityConverter}">
                                        <Binding Path="CallStatus"/>
                                        <Binding Path="TotalAssignments"/>
                                    </MultiBinding>
                                </Button.Visibility>
                            </Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>

        <Button Content="Add" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,0,10" Height="50" Width="100"  Click="btnAddCall_Click"   Style="{StaticResource AddButtonStyle}" />
    </Grid>
</Window>-->


<Window x:Class="PL.Call.CallListWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PL.Call"
        mc:Ignorable="d"
        Title="CallListWindow"
        WindowState="Maximized"
        DataContext="{Binding RelativeSource={RelativeSource Mode=Self}}"
        Loaded="callListWindow_Loaded"
        Closed="callLisWindow_Closed">

    <Window.Resources>
        <!-- Background gradient -->
        <LinearGradientBrush x:Key="WindowBackgroundBrush" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="#f1f5f9" Offset="0"/>
            <GradientStop Color="#e2e8f0" Offset="0.5"/>
            <GradientStop Color="#cbd5e1" Offset="1"/>
        </LinearGradientBrush>

        <!-- Card background -->
        <SolidColorBrush x:Key="CardBackgroundBrush" Color="#E0FFFFFF" Opacity="0.75"/>

        <!-- Header style -->
        <Style x:Key="HeaderStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="32"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Foreground" Value="#1e293b"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0,20,0,30"/>
        </Style>

        <!-- Label style -->
        <Style TargetType="Label">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="#374151"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>

        <!-- ComboBox style -->
        <Style TargetType="ComboBox">
            <Setter Property="Height" Value="40"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="12,10"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="#1f2937"/>
            <Setter Property="BorderBrush" Value="#d1d5db"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="6">
                            <Grid>
                                <ToggleButton Name="ToggleButton" 
                                            Background="Transparent"
                                            BorderThickness="0"
                                            Focusable="false"
                                            IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                            ClickMode="Press">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition Width="20"/>
                                        </Grid.ColumnDefinitions>
                                        <Path Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center"
                                              Data="M 0 0 L 4 4 L 8 0 Z" Fill="#6b7280"/>
                                    </Grid>
                                </ToggleButton>
                                <ContentPresenter Name="ContentSite" IsHitTestVisible="False"
                                                Content="{TemplateBinding SelectionBoxItem}"
                                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                Margin="10,3,23,3"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Left"/>
                                <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}"
                                       AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                                    <Grid Name="DropDown" SnapsToDevicePixels="True"
                                          MinWidth="{TemplateBinding ActualWidth}"
                                          MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                        <Border Background="White" BorderThickness="1" BorderBrush="#d1d5db" CornerRadius="6"/>
                                        <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                        </ScrollViewer>
                                    </Grid>
                                </Popup>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" Value="#374151"/>
                                <Setter Property="BorderThickness" Value="2"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Button style -->
        <Style TargetType="Button">
            <Setter Property="Height" Value="38"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Background" Value="#374151"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="6"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" 
                                            VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#1f2937"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#111827"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#9ca3af"/>
                                <Setter Property="Foreground" Value="#6b7280"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Add button style -->
        <Style x:Key="AddButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Background" Value="#374151"/>
            <Setter Property="Width" Value="150"/>
            <Setter Property="Height" Value="45"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="8"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                <TextBlock Text="+" FontSize="18" FontWeight="Bold" Margin="0,0,8,0" VerticalAlignment="Center"/>
                                <ContentPresenter VerticalAlignment="Center"/>
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#1f2937"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#111827"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Delete button style -->
        <Style x:Key="DeleteButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Background" Value="#dc2626"/>
            <Setter Property="Width" Value="80"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="6"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#b91c1c"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#991b1b"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Unassign button style -->
        <Style x:Key="UnassignButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Background" Value="#f59e0b"/>
            <Setter Property="Width" Value="80"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="6"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#d97706"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#b45309"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- DataGrid style -->
        <Style TargetType="DataGrid">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="#d1d5db"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="GridLinesVisibility" Value="Horizontal"/>
            <Setter Property="HorizontalGridLinesBrush" Value="#f3f4f6"/>
            <Setter Property="RowBackground" Value="White"/>
            <Setter Property="AlternatingRowBackground" Value="#f9fafb"/>
            <Setter Property="CanUserResizeRows" Value="False"/>
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="SelectionMode" Value="Single"/>
        </Style>

        <!-- DataGrid header style -->
        <Style TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="#f8fafc"/>
            <Setter Property="Foreground" Value="#374151"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Padding" Value="12,8"/>
            <Setter Property="BorderBrush" Value="#e5e7eb"/>
            <Setter Property="BorderThickness" Value="0,0,1,1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>

        <!-- DataGrid cell style -->
        <Style TargetType="DataGridCell">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="8,4"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGridCell">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#dbeafe"/>
                    <Setter Property="Foreground" Value="#1e40af"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <!-- Main background -->
    <Grid Background="{StaticResource WindowBackgroundBrush}">
        <!-- Background pattern -->
        <Canvas>
            <Rectangle Width="300" Height="300" Canvas.Left="1400" Canvas.Top="200" Opacity="0.05">
                <Rectangle.Fill>
                    <RadialGradientBrush>
                        <GradientStop Color="#64748b" Offset="0"/>
                        <GradientStop Color="Transparent" Offset="1"/>
                    </RadialGradientBrush>
                </Rectangle.Fill>
            </Rectangle>
            <Rectangle Width="250" Height="250" Canvas.Left="100" Canvas.Top="600" Opacity="0.03">
                <Rectangle.Fill>
                    <RadialGradientBrush>
                        <GradientStop Color="#374151" Offset="0"/>
                        <GradientStop Color="Transparent" Offset="1"/>
                    </RadialGradientBrush>
                </Rectangle.Fill>
            </Rectangle>
        </Canvas>

        <!-- Main content -->
        <Grid Margin="50">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!-- Header -->
            <TextBlock Grid.Row="0" Text="Call Management" Style="{StaticResource HeaderStyle}"/>

            <!-- Filter section -->
            <Border Grid.Row="1" Background="{StaticResource CardBackgroundBrush}" 
                    CornerRadius="12" Padding="30" Margin="0,0,0,20">
                <Border.Effect>
                    <DropShadowEffect Color="#e2e8f0" BlurRadius="8" ShadowDepth="2" Opacity="0.5"/>
                </Border.Effect>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="200"/>
                        <ColumnDefinition Width="50"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="200"/>
                    </Grid.ColumnDefinitions>

                    <Label Grid.Column="0" Content="Call Type:" VerticalAlignment="Center" Margin="0,0,15,0"/>
                    <ComboBox Grid.Column="1" 
                              SelectedValue="{Binding CallType, Mode=TwoWay}"
                              SelectionChanged="comboBoxFilterCallType_SelectionChanged" 
                              ItemsSource="{Binding Source={StaticResource CallTypeCollectionKey}}"/>

                    <Label Grid.Column="3" Content="Status:" VerticalAlignment="Center" Margin="0,0,15,0"/>
                    <ComboBox Grid.Column="4"
                              SelectedValue="{Binding CallStatus, Mode=TwoWay}"
                              SelectionChanged="comboBoxFilterCallStatus_SelectionChanged" 
                              ItemsSource="{Binding Source={StaticResource CallStatusCollectionKey}}"/>
                </Grid>
            </Border>

            <!-- DataGrid section -->
            <Border Grid.Row="2" Background="{StaticResource CardBackgroundBrush}" 
                    CornerRadius="12" Padding="20" Margin="0,0,0,20">
                <Border.Effect>
                    <DropShadowEffect Color="#e2e8f0" BlurRadius="8" ShadowDepth="2" Opacity="0.5"/>
                </Border.Effect>
                <DataGrid ItemsSource="{Binding CallList}"
                          IsReadOnly="True"
                          AutoGenerateColumns="False"
                          EnableRowVirtualization="True"
                          RowDetailsVisibilityMode="VisibleWhenSelected"
                          MouseDoubleClick="DataGrid_MouseDoubleClick"
                          SelectedItem="{Binding SelectedCall}">

                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding CallId}" Header="Call ID" Width="1*"/>
                        <DataGridTextColumn Binding="{Binding CallType}" Header="Call Type" Width="2*"/>
                        <DataGridTextColumn Binding="{Binding OpeningTime}" Header="Opening Time" Width="2*"/>
                        <DataGridTextColumn Binding="{Binding TimeLeft}" Header="Time Left" Width="1*"/>
                        <DataGridTextColumn Binding="{Binding LastVolunteerName}" Header="Last Volunteer" Width="3*"/>
                        <DataGridTextColumn Binding="{Binding TotalTime}" Header="Total Time" Width="1*"/>
                        <DataGridTextColumn Binding="{Binding CallStatus}" Header="Status" Width="2*"/>
                        <DataGridTextColumn Binding="{Binding TotalAssignments}" Header="Assignments" Width="1*"/>

                        <DataGridTemplateColumn Header="Unassign" Width="1.5*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button Content="Unassign"
                                            Click="btnUnassignCall_Click"
                                            Style="{StaticResource UnassignButtonStyle}"
                                            Visibility="{Binding CallStatus, Converter={StaticResource CallStatusToVisibilityConverter}}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn Header="Delete" Width="1.5*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button Content="Delete"
                                            Click="btnDeleteCall_Click"
                                            Style="{StaticResource DeleteButtonStyle}">
                                        <Button.Visibility>
                                            <MultiBinding Converter="{StaticResource CallStatusAndNeverAssignedToVisibilityConverter}">
                                                <Binding Path="CallStatus"/>
                                                <Binding Path="TotalAssignments"/>
                                            </MultiBinding>
                                        </Button.Visibility>
                                    </Button>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </Border>

            <!-- Add button -->
            <Button Grid.Row="3" Content="Add Call" 
                    HorizontalAlignment="Center" 
                    Click="btnAddCall_Click"   
                    Style="{StaticResource AddButtonStyle}"/>
        </Grid>
    </Grid>
</Window>