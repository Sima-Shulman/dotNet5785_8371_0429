<Window x:Class="PL.ChooseCallWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:wv2="clr-namespace:Microsoft.Web.WebView2.Wpf;assembly=Microsoft.Web.WebView2.Wpf"
        xmlns:local="clr-namespace:PL"
        mc:Ignorable="d"
        Title="ChooseCallWindow" Height="800" Width="1000"
        WindowStartupLocation="CenterScreen"
        DataContext="{Binding RelativeSource={ RelativeSource Mode=Self}}">

    <Window.Resources>
        <!-- Background gradient -->
        <LinearGradientBrush x:Key="WindowBackgroundBrush" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="#f1f5f9" Offset="0"/>
            <GradientStop Color="#e2e8f0" Offset="0.5"/>
            <GradientStop Color="#cbd5e1" Offset="1"/>
        </LinearGradientBrush>

        <!-- Card background -->
        <SolidColorBrush x:Key="CardBackgroundBrush" Color="#E0FFFFFF" Opacity="0.75"/>

        <!-- Header style -->
        <Style x:Key="HeaderStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Foreground" Value="#1e293b"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0,0,0,20"/>
        </Style>

        <!-- Label style -->
        <Style x:Key="LabelStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Foreground" Value="#374151"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Width" Value="120"/>
            <Setter Property="TextAlignment" Value="Right"/>
            <Setter Property="Margin" Value="0,0,10,0"/>
        </Style>

        <!-- TextBox style -->
        <Style TargetType="TextBox">
            <Setter Property="Height" Value="32"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Padding" Value="2,2"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="#1f2937"/>
            <Setter Property="BorderBrush" Value="#d1d5db"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Width" Value="250"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4">
                            <ScrollViewer x:Name="PART_ContentHost"
                                        Margin="{TemplateBinding Padding}"
                                        VerticalAlignment="Center"
                                        HorizontalScrollBarVisibility="Hidden"
                                        VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" Value="#374151"/>
                                <Setter Property="BorderThickness" Value="1.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Button style -->
        <Style TargetType="Button">
            <Setter Property="Height" Value="30"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Background" Value="#374151"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="4"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" 
                                            VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#1f2937"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#111827"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Choose button style -->
        <Style x:Key="ChooseButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Background" Value="#059669"/>
            <Setter Property="Width" Value="60"/>
            <Setter Property="Height" Value="26"/>
            <Setter Property="FontSize" Value="11"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="4"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#047857"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#065f46"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- DataGrid style -->
        <Style TargetType="DataGrid">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="#d1d5db"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="GridLinesVisibility" Value="Horizontal"/>
            <Setter Property="HorizontalGridLinesBrush" Value="#f3f4f6"/>
            <Setter Property="RowBackground" Value="White"/>
            <Setter Property="AlternatingRowBackground" Value="#f9fafb"/>
            <Setter Property="CanUserResizeRows" Value="False"/>
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="FontSize" Value="12"/>
        </Style>

        <!-- DataGrid header style -->
        <Style TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="#f8fafc"/>
            <Setter Property="Foreground" Value="#374151"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Padding" Value="8,6"/>
            <Setter Property="BorderBrush" Value="#e5e7eb"/>
            <Setter Property="BorderThickness" Value="0,0,1,1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>

        <!-- DataGrid cell style -->
        <Style TargetType="DataGridCell">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="6,4"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="11"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGridCell">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#dbeafe"/>
                    <Setter Property="Foreground" Value="#1e40af"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <!-- Main background -->
    <Grid Background="{StaticResource WindowBackgroundBrush}">
        <!-- Background pattern -->
        <Canvas>
            <Rectangle Width="180" Height="180" Canvas.Left="820" Canvas.Top="100" Opacity="0.02">
                <Rectangle.Fill>
                    <RadialGradientBrush>
                        <GradientStop Color="#64748b" Offset="0"/>
                        <GradientStop Color="Transparent" Offset="1"/>
                    </RadialGradientBrush>
                </Rectangle.Fill>
            </Rectangle>
            <Rectangle Width="150" Height="150" Canvas.Left="50" Canvas.Top="550" Opacity="0.015">
                <Rectangle.Fill>
                    <RadialGradientBrush>
                        <GradientStop Color="#374151" Offset="0"/>
                        <GradientStop Color="Transparent" Offset="1"/>
                    </RadialGradientBrush>
                </Rectangle.Fill>
            </Rectangle>
        </Canvas>

        <!-- Main content -->
        <Grid Margin="20">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!-- Header -->
            <TextBlock Grid.Row="0" Text="Choose Available Call" Style="{StaticResource HeaderStyle}"/>

            <!-- Filter section -->
            <Border Grid.Row="1" Background="{StaticResource CardBackgroundBrush}" 
                    CornerRadius="8" Padding="20" Margin="0,0,0,15">
                <Border.Effect>
                    <DropShadowEffect Color="#e2e8f0" BlurRadius="6" ShadowDepth="2" Opacity="0.4"/>
                </Border.Effect>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <TextBlock Text="Max Distance:" Style="{StaticResource LabelStyle}"/>
                    <TextBox Text="{Binding MaxDistance, UpdateSourceTrigger=Explicit}"
                             KeyDown="TextBox_KeyDown" Margin="0,0,20,0"/>
                    <TextBlock Text="Your Address:" Style="{StaticResource LabelStyle}"/>
                    <TextBox Text="{Binding FullAddress, UpdateSourceTrigger=Explicit}"
                             KeyDown="TextBox_KeyDown"/>
                </StackPanel>
            </Border>

            <!-- Main content area -->
            <Grid Grid.Row="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="15"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <!-- DataGrid section -->
                <Border Grid.Row="0" Background="{StaticResource CardBackgroundBrush}" 
                        CornerRadius="8" Padding="15">
                    <Border.Effect>
                        <DropShadowEffect Color="#e2e8f0" BlurRadius="6" ShadowDepth="2" Opacity="0.4"/>
                    </Border.Effect>
                    <DataGrid ItemsSource="{Binding CallList}"
                              IsReadOnly="True" 
                              AutoGenerateColumns="False"
                              EnableRowVirtualization="True"
                              RowDetailsVisibilityMode="VisibleWhenSelected"
                              SelectionChanged="CallList_SelectionChanged"
                              SelectedItem="{Binding SelectedCall}"
                              ScrollViewer.HorizontalScrollBarVisibility="Disabled">

                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding Id}" Header="Id" Width="0.6*"/>
                            <DataGridTextColumn Binding="{Binding CallType}" Header="Type" Width="1*"/>
                            <DataGridTextColumn Binding="{Binding FullAddress}" Header="Address" Width="2*"/>
                            <DataGridTextColumn Binding="{Binding StartTime}" Header="Start Time" Width="1.2*"/>
                            <DataGridTextColumn Binding="{Binding MaxFinishTime}" Header="Max Finish Time" Width="1.2*"/>
                            <DataGridTextColumn Binding="{Binding CallDistance}" Header="Distance" Width="0.8*"/>
                            <DataGridTemplateColumn Header="Choose" Width="0.7*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Content="Choose" 
                                                Click="btnChooseVolunteer_Click"
                                                Style="{StaticResource ChooseButtonStyle}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </Border>

                <!-- Map section -->
                <Border Grid.Row="2" Background="White" 
                        CornerRadius="8" BorderBrush="#d1d5db" BorderThickness="1">
                    <Border.Effect>
                        <DropShadowEffect Color="#e2e8f0" BlurRadius="6" ShadowDepth="2" Opacity="0.4"/>
                    </Border.Effect>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <!-- Map header -->
                        <Border Grid.Row="0" Background="#f8fafc" CornerRadius="8,8,0,0" Padding="15,10">
                            <TextBlock Text="Call Locations" 
                                     FontWeight="SemiBold" 
                                     FontSize="14" 
                                     Foreground="#374151" 
                                     HorizontalAlignment="Center"/>
                        </Border>

                        <!-- Map content -->
                        <Border Grid.Row="1" CornerRadius="0,0,8,8" ClipToBounds="True">
                            <wv2:WebView2 Name="webView" Height="230" Margin="3"/>
                        </Border>
                    </Grid>
                </Border>
            </Grid>
        </Grid>
    </Grid>
</Window>