<!--<Window x:Class="PL.Volunteer.VolunteerListWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Volunteer List" Height="520" Width="900"
        WindowStartupLocation="CenterScreen"
        WindowState="Maximized"
        DataContext="{Binding RelativeSource={RelativeSource Mode=Self}}"
        Background="#F0F4F8"
        Loaded=" volunteerListWindow_Loaded"
        Closed="volunteerListWindow_Closed">

    <Window.Resources>
        --><!-- Brushes --><!--
        <SolidColorBrush x:Key="PrimaryColor" Color="#007ACC"/>
        <SolidColorBrush x:Key="DangerColor" Color="#D9534F"/>
        <SolidColorBrush x:Key="TextPrimary" Color="#222222"/>
        <SolidColorBrush x:Key="TextSecondary" Color="#555555"/>

        --><!-- Label Style --><!--
        <Style TargetType="Label" x:Key="LabelStyle">
            <Setter Property="FontWeight" Value="SemiBold" />
            <Setter Property="Foreground" Value="{StaticResource TextPrimary}" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        --><!-- ComboBox Style --><!--
        <Style TargetType="ComboBox" x:Key="ComboBoxStyle">
            <Setter Property="Padding" Value="6,3"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="{StaticResource TextPrimary}"/>
            <Setter Property="BorderBrush" Value="#CCC"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="MinWidth" Value="220"/>
        </Style>

        --><!-- Button Style --><!--
        <Style TargetType="Button" x:Key="PrimaryButtonStyle">
            <Setter Property="Background" Value="{StaticResource PrimaryColor}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Padding" Value="8,5"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Width" Value="140"/>
            <Setter Property="Height" Value="38"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="5">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#005A9E"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#003D6A"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5"/>
                                <Setter Property="Cursor" Value="Arrow"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        --><!-- Delete Button Style --><!--
        <Style TargetType="Button" x:Key="DeleteButtonStyle">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="4"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="ToolTip" Value="Delete Volunteer"/>
            <Setter Property="Foreground" Value="{StaticResource DangerColor}"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="3">
                            <TextBlock Text="✕"
                                       Foreground="{TemplateBinding Foreground}"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="#A93226"/>
                                <Setter Property="Background" Value="#F9EBEA"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Foreground" Value="#7B241C"/>
                                <Setter Property="Background" Value="#F5B7B1"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.4"/>
                                <Setter Property="Cursor" Value="Arrow"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        --><!-- DataGrid Style --><!--
        <Style TargetType="DataGrid" x:Key="DataGridStyle">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="RowHeight" Value="32"/>
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="CanUserResizeRows" Value="False"/>
            <Setter Property="GridLinesVisibility" Value="Horizontal"/>
            <Setter Property="BorderBrush" Value="#CCC"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="Margin" Value="0,0,0,10"/>
        </Style>

        <Style TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="#E5E9F0"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Foreground" Value="{StaticResource TextPrimary}"/>
            <Setter Property="Padding" Value="6,3"/>
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
            <Setter Property="BorderBrush" Value="#CCC"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>

        <Style TargetType="DataGridCell">
            <Setter Property="HorizontalAlignment" Value="Center"/>

        </Style>

    </Window.Resources>

    <Grid Margin="20">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        --><!-- Filter --><!--
        <StackPanel Orientation="Horizontal" Grid.Row="0" Margin="0 0 0 12" VerticalAlignment="Center">
            <Label Content="Filter:" Style="{StaticResource LabelStyle}" />
            <ComboBox Width="220"
                      Margin="10,0,0,0"
                      SelectedValue="{Binding CallType, Mode=TwoWay}"
                      SelectionChanged="comboBoxFilterVolunteers_SelectionChanged"
                      ItemsSource="{Binding Source={StaticResource CallTypeCollectionKey}}"
                      Style="{StaticResource ComboBoxStyle}" />
        </StackPanel>

        --><!-- DataGrid --><!--
        <DataGrid Grid.Row="1"
                  ItemsSource="{Binding VolunteerList}"
                  SelectedItem="{Binding SelectedVolunteer}"
                  Style="{StaticResource DataGridStyle}"
                  MouseDoubleClick="DataGrid_MouseDoubleClick">

            <DataGrid.Columns>
                <DataGridTextColumn Header="Id" Binding="{Binding Id}" Width="0.8*" />
                <DataGridTextColumn Header="Full Name" Binding="{Binding FullName}" Width="2*"/>
                <DataGridTextColumn Header="Handled" Binding="{Binding TotalHandledCalls}" Width="1*"/>
                <DataGridTextColumn Header="Canceled" Binding="{Binding TotalCanceledCalls}" Width="1*"/>
                <DataGridTextColumn Header="Expired" Binding="{Binding TotalExpiredCalls}" Width="1*"/>
                <DataGridTextColumn Header="Call Id" Binding="{Binding CallId}" Width="1*"/>
                <DataGridTextColumn Header="Call Type" Binding="{Binding CallType}" Width="1.2*"/>

                <DataGridTemplateColumn Header="Active" Width="0.8*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding IsActive}" IsEnabled="False" HorizontalAlignment="Center"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Delete" Width="0.8*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Click="btnDeleteVolunteer_Click"
                        Style="{StaticResource DeleteButtonStyle}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>

        </DataGrid>

        --><!-- Add Volunteer Button --><!--
        <Button Grid.Row="2"
                Content="Add Volunteer"
                Style="{StaticResource PrimaryButtonStyle}"
                Click="btnAddVolunteer_Click" />
    </Grid>
</Window>-->

    
    
    
    
<Window x:Class="PL.Volunteer.VolunteerListWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Volunteer List" Height="700" Width="1000"
        WindowStartupLocation="CenterScreen"
        DataContext="{Binding RelativeSource={RelativeSource Mode=Self}}"
        Loaded=" volunteerListWindow_Loaded"
        Closed="volunteerListWindow_Closed">

    <Window.Resources>
        <!-- Background gradient -->
        <LinearGradientBrush x:Key="WindowBackgroundBrush" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="#f1f5f9" Offset="0"/>
            <GradientStop Color="#e2e8f0" Offset="0.5"/>
            <GradientStop Color="#cbd5e1" Offset="1"/>
        </LinearGradientBrush>

        <!-- Card background -->
        <SolidColorBrush x:Key="CardBackgroundBrush" Color="#E0FFFFFF" Opacity="0.75"/>

        <!-- Header style -->
        <Style x:Key="HeaderStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="28"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Foreground" Value="#1e293b"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0,15,0,25"/>
        </Style>

        <!-- Label Style -->
        <Style TargetType="Label">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="#374151"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>

        <!-- ComboBox Style -->
        <Style TargetType="ComboBox">
            <Setter Property="Height" Value="40"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="12,10"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="#1f2937"/>
            <Setter Property="BorderBrush" Value="#d1d5db"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="6">
                            <Grid>
                                <ToggleButton Name="ToggleButton" 
                                            Background="Transparent"
                                            BorderThickness="0"
                                            Focusable="false"
                                            IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                            ClickMode="Press">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition Width="20"/>
                                        </Grid.ColumnDefinitions>
                                        <Path Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center"
                                              Data="M 0 0 L 4 4 L 8 0 Z" Fill="#6b7280"/>
                                    </Grid>
                                </ToggleButton>
                                <ContentPresenter Name="ContentSite" IsHitTestVisible="False"
                                                Content="{TemplateBinding SelectionBoxItem}"
                                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                Margin="10,3,23,3"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Left"/>
                                <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}"
                                       AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                                    <Grid Name="DropDown" SnapsToDevicePixels="True"
                                          MinWidth="{TemplateBinding ActualWidth}"
                                          MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                        <Border Background="White" BorderThickness="1" BorderBrush="#d1d5db" CornerRadius="6"/>
                                        <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                        </ScrollViewer>
                                    </Grid>
                                </Popup>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" Value="#374151"/>
                                <Setter Property="BorderThickness" Value="2"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Button style -->
        <Style TargetType="Button">
            <Setter Property="Height" Value="38"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Background" Value="#374151"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="6"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" 
                                            VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#1f2937"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#111827"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#9ca3af"/>
                                <Setter Property="Foreground" Value="#6b7280"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Add button style -->
        <Style x:Key="AddButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Background" Value="#374151"/>
            <Setter Property="Width" Value="150"/>
            <Setter Property="Height" Value="45"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="8"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                <TextBlock Text="+" FontSize="18" FontWeight="Bold" Margin="0,0,8,0" VerticalAlignment="Center"/>
                                <ContentPresenter VerticalAlignment="Center"/>
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#1f2937"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#111827"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Delete button style -->
        <Style x:Key="DeleteButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Background" Value="#dc2626"/>
            <Setter Property="Width" Value="50"/>
            <Setter Property="Height" Value="24"/>
            <Setter Property="FontSize" Value="10"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="4"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#b91c1c"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#991b1b"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- DataGrid style -->
        <Style TargetType="DataGrid">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="#d1d5db"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="GridLinesVisibility" Value="Horizontal"/>
            <Setter Property="HorizontalGridLinesBrush" Value="#f3f4f6"/>
            <Setter Property="RowBackground" Value="White"/>
            <Setter Property="AlternatingRowBackground" Value="#f9fafb"/>
            <Setter Property="CanUserResizeRows" Value="False"/>
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="SelectionMode" Value="Single"/>
        </Style>

        <!-- DataGrid header style -->
        <Style TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="#f8fafc"/>
            <Setter Property="Foreground" Value="#374151"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Padding" Value="12,8"/>
            <Setter Property="BorderBrush" Value="#e5e7eb"/>
            <Setter Property="BorderThickness" Value="0,0,1,1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>

        <!-- DataGrid cell style -->
        <Style TargetType="DataGridCell">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="8,4"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGridCell">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#dbeafe"/>
                    <Setter Property="Foreground" Value="#1e40af"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <!-- Main background -->
    <Grid Background="{StaticResource WindowBackgroundBrush}">
        <!-- Background pattern -->
        <Canvas>
            <Rectangle Width="200" Height="200" Canvas.Left="800" Canvas.Top="120" Opacity="0.03">
                <Rectangle.Fill>
                    <RadialGradientBrush>
                        <GradientStop Color="#64748b" Offset="0"/>
                        <GradientStop Color="Transparent" Offset="1"/>
                    </RadialGradientBrush>
                </Rectangle.Fill>
            </Rectangle>
            <Rectangle Width="200" Height="200" Canvas.Left="80" Canvas.Top="450" Opacity="0.025">
                <Rectangle.Fill>
                    <RadialGradientBrush>
                        <GradientStop Color="#374151" Offset="0"/>
                        <GradientStop Color="Transparent" Offset="1"/>
                    </RadialGradientBrush>
                </Rectangle.Fill>
            </Rectangle>
        </Canvas>

        <!-- Main content -->
        <Grid Margin="30">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!-- Header -->
            <TextBlock Grid.Row="0" Text="Volunteer Management" Style="{StaticResource HeaderStyle}"/>

            <!-- Filter section -->
            <Border Grid.Row="1" Background="{StaticResource CardBackgroundBrush}" 
                    CornerRadius="10" Padding="20" Margin="0,0,0,15">
                <Border.Effect>
                    <DropShadowEffect Color="#e2e8f0" BlurRadius="8" ShadowDepth="2" Opacity="0.5"/>
                </Border.Effect>
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                    <Label Content="Filter:" VerticalAlignment="Center" Margin="0,0,15,0"/>
                    <ComboBox Width="220"
                              SelectedValue="{Binding CallType, Mode=TwoWay}"
                              SelectionChanged="comboBoxFilterVolunteers_SelectionChanged"
                              ItemsSource="{Binding Source={StaticResource CallTypeCollectionKey}}"/>
                </StackPanel>
            </Border>

            <!-- DataGrid section -->
            <Border Grid.Row="2" Background="{StaticResource CardBackgroundBrush}" 
                    CornerRadius="10" Padding="15" Margin="0,0,0,15">
                <Border.Effect>
                    <DropShadowEffect Color="#e2e8f0" BlurRadius="8" ShadowDepth="2" Opacity="0.5"/>
                </Border.Effect>
                <DataGrid ItemsSource="{Binding VolunteerList}"
                          SelectedItem="{Binding SelectedVolunteer}"
                          IsReadOnly="True"
                          AutoGenerateColumns="False"
                          EnableRowVirtualization="True"
                          RowDetailsVisibilityMode="VisibleWhenSelected"
                          MouseDoubleClick="DataGrid_MouseDoubleClick"
                          ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                          ColumnWidth="*">

                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Id" Binding="{Binding Id}" Width="1.2*" />
                        <DataGridTextColumn Header="Full Name" Binding="{Binding FullName}" Width="2.4*"/>
                        <DataGridTextColumn Header="Handled" Binding="{Binding TotalHandledCalls}" Width="1*"/>
                        <DataGridTextColumn Header="Canceled" Binding="{Binding TotalCanceledCalls}" Width="1*"/>
                        <DataGridTextColumn Header="Expired" Binding="{Binding TotalExpiredCalls}" Width="1*"/>
                        <DataGridTextColumn Header="Call Id" Binding="{Binding CallId}" Width="1*"/>
                        <DataGridTextColumn Header="Call Type" Binding="{Binding CallType}" Width="1.8*"/>

                        <DataGridTemplateColumn Header="Active" Width="0.8*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox IsChecked="{Binding IsActive}" IsEnabled="False" HorizontalAlignment="Center"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn Header="Delete" Width="1*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button Click="btnDeleteVolunteer_Click"
                                            Content="Delete"
                                            Style="{StaticResource DeleteButtonStyle}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </Border>

            <!-- Add button -->
            <Button Grid.Row="3" Content="Add Volunteer" 
                    HorizontalAlignment="Center" 
                    Click="btnAddVolunteer_Click"   
                    Style="{StaticResource AddButtonStyle}"/>
        </Grid>
    </Grid>
</Window>